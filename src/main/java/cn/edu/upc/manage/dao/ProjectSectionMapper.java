package cn.edu.upc.manage.dao;

import cn.edu.upc.manage.model.ProjectSection;
import cn.edu.upc.manage.model.ProjectSectionExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ProjectSectionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_section
     *
     * @mbg.generated Fri Nov 27 11:30:28 CST 2020
     */
    long countByExample(ProjectSectionExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_section
     *
     * @mbg.generated Fri Nov 27 11:30:28 CST 2020
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_section
     *
     * @mbg.generated Fri Nov 27 11:30:28 CST 2020
     */
    int insert(ProjectSection record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_section
     *
     * @mbg.generated Fri Nov 27 11:30:28 CST 2020
     */
    int insertSelective(ProjectSection record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_section
     *
     * @mbg.generated Fri Nov 27 11:30:28 CST 2020
     */
    ProjectSection selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_section
     *
     * @mbg.generated Fri Nov 27 11:30:28 CST 2020
     */
    int updateByPrimaryKeySelective(ProjectSection record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_section
     *
     * @mbg.generated Fri Nov 27 11:30:28 CST 2020
     */
    int updateByPrimaryKey(ProjectSection record);

    void insertList(@Param("list") List<ProjectSection> projectSectionList);

    void insertTender(@Param("projectSection") ProjectSection projectSection);

    void insertContract(@Param("projectSection") ProjectSection projectSection);

    /**
     * 根据项目id获取标段信息
     * @param projectId
     * @return
     */
    List<ProjectSection> getSectionByProjectId(@Param("projectId")Integer projectId);

    /**
     * 根据项目id获取招标信息
     * @param projectId
     * @return
     */
    List<ProjectSection> getTenderByProjectId(@Param("projectId")Integer projectId);

    /**
     * 根据项目id获取合同信息
     * @param projectId
     * @return
     */
    List<ProjectSection> getContractByProjectId(@Param("projectId")Integer projectId);

    /**
     * 统计某个项目有多少个标段
     * @param projectId
     * @param flag 1为统计标段数，2为统计招标标段数，3为统计审批通过的招标标段数，4为统计审批通过的合同标段数
     * @return
     */
    int count(@Param("projectId")Integer projectId, @Param("flag") Integer flag);



    /**
     * 统计某个项目有多少个标段的招标通过审核
     * @param projectId
     * @return
     */
    int countTenderApprove(@Param("projectId")Integer projectId);


    /**
     * 删除标段
     * @param sectionId
     * @return
     */
    void deleteSection(@Param("sectionId") Integer sectionId);

    /**
     * 批量更新
     * @param projectSectionList
     */
    void updateList(@Param("list") List<ProjectSection> projectSectionList);

    /**
     * 批量更新
     * @param projectSectionList
     */
    void updateTenderList(@Param("list") List<ProjectSection> projectSectionList);

    /**
     * 批量更新
     * @param projectSectionList
     */
    void updateContractList(@Param("list") List<ProjectSection> projectSectionList);

    void batchUpdate(@Param("list") List<ProjectSection> projectSectionList);

    void deleteByprojectId(@Param("projectId") Integer projectId);


}