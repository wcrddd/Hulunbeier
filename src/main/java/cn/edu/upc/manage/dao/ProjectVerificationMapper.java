package cn.edu.upc.manage.dao;

import cn.edu.upc.manage.model.ProjectVerification;
import cn.edu.upc.manage.model.ProjectVerificationExample;
import org.apache.ibatis.annotations.Param;

import java.util.List;

public interface ProjectVerificationMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_verification
     *
     * @mbg.generated Fri Mar 19 21:31:03 CST 2021
     */
    long countByExample(ProjectVerificationExample example);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_verification
     *
     * @mbg.generated Fri Mar 19 21:31:03 CST 2021
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_verification
     *
     * @mbg.generated Fri Mar 19 21:31:03 CST 2021
     */
    int insert(ProjectVerification record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_verification
     *
     * @mbg.generated Fri Mar 19 21:31:03 CST 2021
     */
    int insertSelective(ProjectVerification record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_verification
     *
     * @mbg.generated Fri Mar 19 21:31:03 CST 2021
     */
    ProjectVerification selectByPrimaryKey(Integer id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_verification
     *
     * @mbg.generated Fri Mar 19 21:31:03 CST 2021
     */
    int updateByPrimaryKeySelective(ProjectVerification record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table project_verification
     *
     * @mbg.generated Fri Mar 19 21:31:03 CST 2021
     */
    int updateByPrimaryKey(ProjectVerification record);

    /**
     * 新增项目的审价
     * @param projectVerificationList
     * @return
     */
    void insertVerificationList(@Param("list") List<ProjectVerification> projectVerificationList);

    /**
     * 获取项目的审价
     * @param projectId
     * @return
     */
    List<ProjectVerification> getVerification(@Param("projectId") Integer projectId);

    /**
     * 更新项目的审价
     * @param projectVerificationList
     * @return
     */
    void updateVerificationList(@Param("list") List<ProjectVerification> projectVerificationList);
}