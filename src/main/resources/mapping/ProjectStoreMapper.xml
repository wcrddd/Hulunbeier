<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.edu.upc.manage.dao.ProjectStoreMapper">
  <resultMap id="BaseResultMap" type="cn.edu.upc.manage.model.ProjectStore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="project_id" jdbcType="VARCHAR" property="projectId" />
    <result column="apply_type" jdbcType="INTEGER" property="applyType" />
    <result column="guide_id" jdbcType="INTEGER" property="guideId" />
    <result column="guide_name" jdbcType="VARCHAR" property="guideName" />
    <result column="important_flag" jdbcType="INTEGER" property="importantFlag" />
    <result column="project_name" jdbcType="VARCHAR" property="projectName" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="build_year" jdbcType="VARCHAR" property="buildYear" />
    <result column="place" jdbcType="VARCHAR" property="place" />
    <result column="project_type" jdbcType="INTEGER" property="projectType" />
    <result column="project_type_name" jdbcType="VARCHAR" property="projectTypeName" />
    <result column="invest_direction" jdbcType="VARCHAR" property="investDirection" />
    <result column="industry_direction" jdbcType="VARCHAR" property="industryDirection" />
    <result column="implement_dept" jdbcType="VARCHAR" property="implementDept" />
    <result column="invest_estimate" jdbcType="REAL" property="investEstimate" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="appendix" jdbcType="VARCHAR" property="appendix" />
    <result column="approve" jdbcType="INTEGER" property="approve" />
    <result column="approve_time" jdbcType="VARCHAR" property="approveTime" />
    <result column="opinion" jdbcType="VARCHAR" property="opinion" />
    <result column="constru_unit_id" jdbcType="INTEGER" property="construUnitId" />
    <result column="construt_unit_name" jdbcType="VARCHAR" property="construtUnitName" />
    <result column="planed_flag" jdbcType="INTEGER" property="planedFlag" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="del_flag" jdbcType="INTEGER" property="delFlag" />
    <result column="operator" jdbcType="VARCHAR" property="operator" />
    <result column="operator_ip" jdbcType="VARCHAR" property="operatorIp" />
    <result column="operator_time" jdbcType="TIMESTAMP" property="operatorTime" />
    <result column="project_nature" jdbcType="VARCHAR" property="projectNature" />
    <result column="financial_funds" jdbcType="REAL" property="financialFunds" />
    <result column="matching_funds" jdbcType="REAL" property="matchingFunds" />
    <result column="self_funds" jdbcType="REAL" property="selfFunds" />
    <result column="other_funds" jdbcType="REAL" property="otherFunds" />
    <result column="construction_time" jdbcType="VARCHAR" property="constructionTime" />
    <result column="pre_work" jdbcType="VARCHAR" property="preWork" />
    <result column="construction_difficulty" jdbcType="VARCHAR" property="constructionDifficulty" />
    <result column="store_flag" jdbcType="INTEGER" property="storeFlag" />
    <result column="suggestion_appendix" jdbcType="VARCHAR" property="suggestionAppendix" />
    <result column="special_name" jdbcType="VARCHAR" property="specialName" />
    <result column="special" jdbcType="INTEGER" property="special" />
    <result column="tender_flag" jdbcType="INTEGER" property="tenderFlag" />
    <result column="section_finish_num" jdbcType="INTEGER" property="sectionFinishNum" />
    <result column="section_num" jdbcType="INTEGER" property="sectionNum" />
    <result column="suggestion" jdbcType="VARCHAR" property="suggestion" />
    <result column="longitude" jdbcType="DOUBLE" property="longitude" />
    <result column="latitude" jdbcType="DOUBLE" property="latitude" />
    <result column="evaluate" jdbcType="VARCHAR" property="evaluate" />
    <result column="verification_opinion_one" jdbcType="VARCHAR" property="verificationOpinionOne" />
    <result column="verification_opinion_two" jdbcType="VARCHAR" property="verificationOpinionTwo" />
    <result column="verification_opinion_three" jdbcType="VARCHAR" property="verificationOpinionThree" />
    <result column="flag" jdbcType="INTEGER" property="flag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    id, project_id, apply_type, guide_id, guide_name, important_flag, project_name, department, 
    build_year, place, project_type, project_type_name, invest_direction, industry_direction, 
    implement_dept, invest_estimate, content, appendix, approve, approve_time, opinion, 
    constru_unit_id, construt_unit_name, planed_flag, create_time, del_flag, operator, 
    operator_ip, operator_time, project_nature, financial_funds, matching_funds, self_funds, 
    other_funds, construction_time, pre_work, construction_difficulty, store_flag, suggestion_appendix, 
    special_name, special, tender_flag, section_finish_num, section_num, suggestion, 
    longitude, latitude, evaluate, verification_opinion_one, verification_opinion_two, 
    verification_opinion_three, flag
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    select 
    <include refid="Base_Column_List" />
    from project_store
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    delete from project_store
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="cn.edu.upc.manage.model.ProjectStore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    insert into project_store (id, project_id, apply_type, 
      guide_id, guide_name, important_flag, 
      project_name, department, build_year, 
      place, project_type, project_type_name, 
      invest_direction, industry_direction, implement_dept, 
      invest_estimate, content, appendix, 
      approve, approve_time, opinion, 
      constru_unit_id, construt_unit_name, planed_flag, 
      create_time, del_flag, operator, 
      operator_ip, operator_time, project_nature, 
      financial_funds, matching_funds, self_funds, 
      other_funds, construction_time, pre_work, 
      construction_difficulty, store_flag, suggestion_appendix, 
      special_name, special, tender_flag, 
      section_finish_num, section_num, suggestion, 
      longitude, latitude, evaluate, 
      verification_opinion_one, verification_opinion_two, 
      verification_opinion_three, flag)
    values (#{id,jdbcType=INTEGER}, #{projectId,jdbcType=VARCHAR}, #{applyType,jdbcType=INTEGER}, 
      #{guideId,jdbcType=INTEGER}, #{guideName,jdbcType=VARCHAR}, #{importantFlag,jdbcType=INTEGER}, 
      #{projectName,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, #{buildYear,jdbcType=VARCHAR}, 
      #{place,jdbcType=VARCHAR}, #{projectType,jdbcType=INTEGER}, #{projectTypeName,jdbcType=VARCHAR}, 
      #{investDirection,jdbcType=VARCHAR}, #{industryDirection,jdbcType=VARCHAR}, #{implementDept,jdbcType=VARCHAR}, 
      #{investEstimate,jdbcType=REAL}, #{content,jdbcType=VARCHAR}, #{appendix,jdbcType=VARCHAR}, 
      #{approve,jdbcType=INTEGER}, #{approveTime,jdbcType=VARCHAR}, #{opinion,jdbcType=VARCHAR}, 
      #{construUnitId,jdbcType=INTEGER}, #{construtUnitName,jdbcType=VARCHAR}, #{planedFlag,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=INTEGER}, #{operator,jdbcType=VARCHAR}, 
      #{operatorIp,jdbcType=VARCHAR}, #{operatorTime,jdbcType=TIMESTAMP}, #{projectNature,jdbcType=VARCHAR}, 
      #{financialFunds,jdbcType=REAL}, #{matchingFunds,jdbcType=REAL}, #{selfFunds,jdbcType=REAL}, 
      #{otherFunds,jdbcType=REAL}, #{constructionTime,jdbcType=VARCHAR}, #{preWork,jdbcType=VARCHAR}, 
      #{constructionDifficulty,jdbcType=VARCHAR}, #{storeFlag,jdbcType=INTEGER}, #{suggestionAppendix,jdbcType=VARCHAR}, 
      #{specialName,jdbcType=VARCHAR}, #{special,jdbcType=INTEGER}, #{tenderFlag,jdbcType=INTEGER}, 
      #{sectionFinishNum,jdbcType=INTEGER}, #{sectionNum,jdbcType=INTEGER}, #{suggestion,jdbcType=VARCHAR}, 
      #{longitude,jdbcType=DOUBLE}, #{latitude,jdbcType=DOUBLE}, #{evaluate,jdbcType=VARCHAR}, 
      #{verificationOpinionOne,jdbcType=VARCHAR}, #{verificationOpinionTwo,jdbcType=VARCHAR}, 
      #{verificationOpinionThree,jdbcType=VARCHAR}, #{flag,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="cn.edu.upc.manage.model.ProjectStore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    insert into project_store
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="projectId != null">
        project_id,
      </if>
      <if test="applyType != null">
        apply_type,
      </if>
      <if test="guideId != null">
        guide_id,
      </if>
      <if test="guideName != null">
        guide_name,
      </if>
      <if test="importantFlag != null">
        important_flag,
      </if>
      <if test="projectName != null">
        project_name,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="buildYear != null">
        build_year,
      </if>
      <if test="place != null">
        place,
      </if>
      <if test="projectType != null">
        project_type,
      </if>
      <if test="projectTypeName != null">
        project_type_name,
      </if>
      <if test="investDirection != null">
        invest_direction,
      </if>
      <if test="industryDirection != null">
        industry_direction,
      </if>
      <if test="implementDept != null">
        implement_dept,
      </if>
      <if test="investEstimate != null">
        invest_estimate,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="appendix != null">
        appendix,
      </if>
      <if test="approve != null">
        approve,
      </if>
      <if test="approveTime != null">
        approve_time,
      </if>
      <if test="opinion != null">
        opinion,
      </if>
      <if test="construUnitId != null">
        constru_unit_id,
      </if>
      <if test="construtUnitName != null">
        construt_unit_name,
      </if>
      <if test="planedFlag != null">
        planed_flag,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="delFlag != null">
        del_flag,
      </if>
      <if test="operator != null">
        operator,
      </if>
      <if test="operatorIp != null">
        operator_ip,
      </if>
      <if test="operatorTime != null">
        operator_time,
      </if>
      <if test="projectNature != null">
        project_nature,
      </if>
      <if test="financialFunds != null">
        financial_funds,
      </if>
      <if test="matchingFunds != null">
        matching_funds,
      </if>
      <if test="selfFunds != null">
        self_funds,
      </if>
      <if test="otherFunds != null">
        other_funds,
      </if>
      <if test="constructionTime != null">
        construction_time,
      </if>
      <if test="preWork != null">
        pre_work,
      </if>
      <if test="constructionDifficulty != null">
        construction_difficulty,
      </if>
      <if test="storeFlag != null">
        store_flag,
      </if>
      <if test="suggestionAppendix != null">
        suggestion_appendix,
      </if>
      <if test="specialName != null">
        special_name,
      </if>
      <if test="special != null">
        special,
      </if>
      <if test="tenderFlag != null">
        tender_flag,
      </if>
      <if test="sectionFinishNum != null">
        section_finish_num,
      </if>
      <if test="sectionNum != null">
        section_num,
      </if>
      <if test="suggestion != null">
        suggestion,
      </if>
      <if test="longitude != null">
        longitude,
      </if>
      <if test="latitude != null">
        latitude,
      </if>
      <if test="evaluate != null">
        evaluate,
      </if>
      <if test="verificationOpinionOne != null">
        verification_opinion_one,
      </if>
      <if test="verificationOpinionTwo != null">
        verification_opinion_two,
      </if>
      <if test="verificationOpinionThree != null">
        verification_opinion_three,
      </if>
      <if test="flag != null">
        flag,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="projectId != null">
        #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        #{applyType,jdbcType=INTEGER},
      </if>
      <if test="guideId != null">
        #{guideId,jdbcType=INTEGER},
      </if>
      <if test="guideName != null">
        #{guideName,jdbcType=VARCHAR},
      </if>
      <if test="importantFlag != null">
        #{importantFlag,jdbcType=INTEGER},
      </if>
      <if test="projectName != null">
        #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="buildYear != null">
        #{buildYear,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        #{place,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null">
        #{projectType,jdbcType=INTEGER},
      </if>
      <if test="projectTypeName != null">
        #{projectTypeName,jdbcType=VARCHAR},
      </if>
      <if test="investDirection != null">
        #{investDirection,jdbcType=VARCHAR},
      </if>
      <if test="industryDirection != null">
        #{industryDirection,jdbcType=VARCHAR},
      </if>
      <if test="implementDept != null">
        #{implementDept,jdbcType=VARCHAR},
      </if>
      <if test="investEstimate != null">
        #{investEstimate,jdbcType=REAL},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="appendix != null">
        #{appendix,jdbcType=VARCHAR},
      </if>
      <if test="approve != null">
        #{approve,jdbcType=INTEGER},
      </if>
      <if test="approveTime != null">
        #{approveTime,jdbcType=VARCHAR},
      </if>
      <if test="opinion != null">
        #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="construUnitId != null">
        #{construUnitId,jdbcType=INTEGER},
      </if>
      <if test="construtUnitName != null">
        #{construtUnitName,jdbcType=VARCHAR},
      </if>
      <if test="planedFlag != null">
        #{planedFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorIp != null">
        #{operatorIp,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectNature != null">
        #{projectNature,jdbcType=VARCHAR},
      </if>
      <if test="financialFunds != null">
        #{financialFunds,jdbcType=REAL},
      </if>
      <if test="matchingFunds != null">
        #{matchingFunds,jdbcType=REAL},
      </if>
      <if test="selfFunds != null">
        #{selfFunds,jdbcType=REAL},
      </if>
      <if test="otherFunds != null">
        #{otherFunds,jdbcType=REAL},
      </if>
      <if test="constructionTime != null">
        #{constructionTime,jdbcType=VARCHAR},
      </if>
      <if test="preWork != null">
        #{preWork,jdbcType=VARCHAR},
      </if>
      <if test="constructionDifficulty != null">
        #{constructionDifficulty,jdbcType=VARCHAR},
      </if>
      <if test="storeFlag != null">
        #{storeFlag,jdbcType=INTEGER},
      </if>
      <if test="suggestionAppendix != null">
        #{suggestionAppendix,jdbcType=VARCHAR},
      </if>
      <if test="specialName != null">
        #{specialName,jdbcType=VARCHAR},
      </if>
      <if test="special != null">
        #{special,jdbcType=INTEGER},
      </if>
      <if test="tenderFlag != null">
        #{tenderFlag,jdbcType=INTEGER},
      </if>
      <if test="sectionFinishNum != null">
        #{sectionFinishNum,jdbcType=INTEGER},
      </if>
      <if test="sectionNum != null">
        #{sectionNum,jdbcType=INTEGER},
      </if>
      <if test="suggestion != null">
        #{suggestion,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="evaluate != null">
        #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="verificationOpinionOne != null">
        #{verificationOpinionOne,jdbcType=VARCHAR},
      </if>
      <if test="verificationOpinionTwo != null">
        #{verificationOpinionTwo,jdbcType=VARCHAR},
      </if>
      <if test="verificationOpinionThree != null">
        #{verificationOpinionThree,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        #{flag,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.edu.upc.manage.model.ProjectStoreExample" resultType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    select count(*) from project_store
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="cn.edu.upc.manage.model.ProjectStore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    update project_store
    <set>
      <if test="projectId != null">
        project_id = #{projectId,jdbcType=VARCHAR},
      </if>
      <if test="applyType != null">
        apply_type = #{applyType,jdbcType=INTEGER},
      </if>
      <if test="guideId != null">
        guide_id = #{guideId,jdbcType=INTEGER},
      </if>
      <if test="guideName != null">
        guide_name = #{guideName,jdbcType=VARCHAR},
      </if>
      <if test="importantFlag != null">
        important_flag = #{importantFlag,jdbcType=INTEGER},
      </if>
      <if test="projectName != null">
        project_name = #{projectName,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="buildYear != null">
        build_year = #{buildYear,jdbcType=VARCHAR},
      </if>
      <if test="place != null">
        place = #{place,jdbcType=VARCHAR},
      </if>
      <if test="projectType != null">
        project_type = #{projectType,jdbcType=INTEGER},
      </if>
      <if test="projectTypeName != null">
        project_type_name = #{projectTypeName,jdbcType=VARCHAR},
      </if>
      <if test="investDirection != null">
        invest_direction = #{investDirection,jdbcType=VARCHAR},
      </if>
      <if test="industryDirection != null">
        industry_direction = #{industryDirection,jdbcType=VARCHAR},
      </if>
      <if test="implementDept != null">
        implement_dept = #{implementDept,jdbcType=VARCHAR},
      </if>
      <if test="investEstimate != null">
        invest_estimate = #{investEstimate,jdbcType=REAL},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="appendix != null">
        appendix = #{appendix,jdbcType=VARCHAR},
      </if>
      <if test="approve != null">
        approve = #{approve,jdbcType=INTEGER},
      </if>
      <if test="approveTime != null">
        approve_time = #{approveTime,jdbcType=VARCHAR},
      </if>
      <if test="opinion != null">
        opinion = #{opinion,jdbcType=VARCHAR},
      </if>
      <if test="construUnitId != null">
        constru_unit_id = #{construUnitId,jdbcType=INTEGER},
      </if>
      <if test="construtUnitName != null">
        construt_unit_name = #{construtUnitName,jdbcType=VARCHAR},
      </if>
      <if test="planedFlag != null">
        planed_flag = #{planedFlag,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="delFlag != null">
        del_flag = #{delFlag,jdbcType=INTEGER},
      </if>
      <if test="operator != null">
        operator = #{operator,jdbcType=VARCHAR},
      </if>
      <if test="operatorIp != null">
        operator_ip = #{operatorIp,jdbcType=VARCHAR},
      </if>
      <if test="operatorTime != null">
        operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      </if>
      <if test="projectNature != null">
        project_nature = #{projectNature,jdbcType=VARCHAR},
      </if>
      <if test="financialFunds != null">
        financial_funds = #{financialFunds,jdbcType=REAL},
      </if>
      <if test="matchingFunds != null">
        matching_funds = #{matchingFunds,jdbcType=REAL},
      </if>
      <if test="selfFunds != null">
        self_funds = #{selfFunds,jdbcType=REAL},
      </if>
      <if test="otherFunds != null">
        other_funds = #{otherFunds,jdbcType=REAL},
      </if>
      <if test="constructionTime != null">
        construction_time = #{constructionTime,jdbcType=VARCHAR},
      </if>
      <if test="preWork != null">
        pre_work = #{preWork,jdbcType=VARCHAR},
      </if>
      <if test="constructionDifficulty != null">
        construction_difficulty = #{constructionDifficulty,jdbcType=VARCHAR},
      </if>
      <if test="storeFlag != null">
        store_flag = #{storeFlag,jdbcType=INTEGER},
      </if>
      <if test="suggestionAppendix != null">
        suggestion_appendix = #{suggestionAppendix,jdbcType=VARCHAR},
      </if>
      <if test="specialName != null">
        special_name = #{specialName,jdbcType=VARCHAR},
      </if>
      <if test="special != null">
        special = #{special,jdbcType=INTEGER},
      </if>
      <if test="tenderFlag != null">
        tender_flag = #{tenderFlag,jdbcType=INTEGER},
      </if>
      <if test="sectionFinishNum != null">
        section_finish_num = #{sectionFinishNum,jdbcType=INTEGER},
      </if>
      <if test="sectionNum != null">
        section_num = #{sectionNum,jdbcType=INTEGER},
      </if>
      <if test="suggestion != null">
        suggestion = #{suggestion,jdbcType=VARCHAR},
      </if>
      <if test="longitude != null">
        longitude = #{longitude,jdbcType=DOUBLE},
      </if>
      <if test="latitude != null">
        latitude = #{latitude,jdbcType=DOUBLE},
      </if>
      <if test="evaluate != null">
        evaluate = #{evaluate,jdbcType=VARCHAR},
      </if>
      <if test="verificationOpinionOne != null">
        verification_opinion_one = #{verificationOpinionOne,jdbcType=VARCHAR},
      </if>
      <if test="verificationOpinionTwo != null">
        verification_opinion_two = #{verificationOpinionTwo,jdbcType=VARCHAR},
      </if>
      <if test="verificationOpinionThree != null">
        verification_opinion_three = #{verificationOpinionThree,jdbcType=VARCHAR},
      </if>
      <if test="flag != null">
        flag = #{flag,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.edu.upc.manage.model.ProjectStore">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Sat Mar 27 22:01:14 CST 2021.
    -->
    update project_store
    set project_id = #{projectId,jdbcType=VARCHAR},
      apply_type = #{applyType,jdbcType=INTEGER},
      guide_id = #{guideId,jdbcType=INTEGER},
      guide_name = #{guideName,jdbcType=VARCHAR},
      important_flag = #{importantFlag,jdbcType=INTEGER},
      project_name = #{projectName,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      build_year = #{buildYear,jdbcType=VARCHAR},
      place = #{place,jdbcType=VARCHAR},
      project_type = #{projectType,jdbcType=INTEGER},
      project_type_name = #{projectTypeName,jdbcType=VARCHAR},
      invest_direction = #{investDirection,jdbcType=VARCHAR},
      industry_direction = #{industryDirection,jdbcType=VARCHAR},
      implement_dept = #{implementDept,jdbcType=VARCHAR},
      invest_estimate = #{investEstimate,jdbcType=REAL},
      content = #{content,jdbcType=VARCHAR},
      appendix = #{appendix,jdbcType=VARCHAR},
      approve = #{approve,jdbcType=INTEGER},
      approve_time = #{approveTime,jdbcType=VARCHAR},
      opinion = #{opinion,jdbcType=VARCHAR},
      constru_unit_id = #{construUnitId,jdbcType=INTEGER},
      construt_unit_name = #{construtUnitName,jdbcType=VARCHAR},
      planed_flag = #{planedFlag,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=INTEGER},
      operator = #{operator,jdbcType=VARCHAR},
      operator_ip = #{operatorIp,jdbcType=VARCHAR},
      operator_time = #{operatorTime,jdbcType=TIMESTAMP},
      project_nature = #{projectNature,jdbcType=VARCHAR},
      financial_funds = #{financialFunds,jdbcType=REAL},
      matching_funds = #{matchingFunds,jdbcType=REAL},
      self_funds = #{selfFunds,jdbcType=REAL},
      other_funds = #{otherFunds,jdbcType=REAL},
      construction_time = #{constructionTime,jdbcType=VARCHAR},
      pre_work = #{preWork,jdbcType=VARCHAR},
      construction_difficulty = #{constructionDifficulty,jdbcType=VARCHAR},
      store_flag = #{storeFlag,jdbcType=INTEGER},
      suggestion_appendix = #{suggestionAppendix,jdbcType=VARCHAR},
      special_name = #{specialName,jdbcType=VARCHAR},
      special = #{special,jdbcType=INTEGER},
      tender_flag = #{tenderFlag,jdbcType=INTEGER},
      section_finish_num = #{sectionFinishNum,jdbcType=INTEGER},
      section_num = #{sectionNum,jdbcType=INTEGER},
      suggestion = #{suggestion,jdbcType=VARCHAR},
      longitude = #{longitude,jdbcType=DOUBLE},
      latitude = #{latitude,jdbcType=DOUBLE},
      evaluate = #{evaluate,jdbcType=VARCHAR},
      verification_opinion_one = #{verificationOpinionOne,jdbcType=VARCHAR},
      verification_opinion_two = #{verificationOpinionTwo,jdbcType=VARCHAR},
      verification_opinion_three = #{verificationOpinionThree,jdbcType=VARCHAR},
      flag = #{flag,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <resultMap extends="BaseResultMap" id="ProjectStoreMo" type="cn.edu.upc.manage.mo.ProjectStoreMo">
    <result column="plan_id" jdbcType="INTEGER" property="planId" />
    <result column="contract_money" jdbcType="REAL" property="contractMoney" />
    <result column="spend_money" jdbcType="REAL" property="spendMoney" />
  </resultMap>

  <resultMap id="NumStatisticsMo" type="cn.edu.upc.manage.mo.NumStatisticsMo">
    <result column="unstart_num" jdbcType="INTEGER" property="unstartNum" />
    <result column="building_num" jdbcType="INTEGER" property="buildingNum" />
    <result column="checking_num" jdbcType="INTEGER" property="checkingNum" />
    <result column="finish_num" jdbcType="INTEGER" property="finishNum" />
    <result column="total_num" jdbcType="INTEGER" property="totalNum" />
    <result column="ag_num" jdbcType="INTEGER" property="agNum" />
    <result column="ah_num" jdbcType="INTEGER" property="ahNum" />
    <result column="water_num" jdbcType="INTEGER" property="waterNum" />
    <result column="welfare_num" jdbcType="INTEGER" property="welfareNum" />
    <result column="help_num" jdbcType="INTEGER" property="helpNum" />
  </resultMap>
  <resultMap id="ConstructUnitStatisticMo" type="cn.edu.upc.manage.mo.ConstructUnitStatisticMo">
    <result column="constru_unit_id" jdbcType="INTEGER" property="construUnitId" />
    <result column="num" jdbcType="INTEGER" property="num" />
    <result column="name" jdbcType="INTEGER" property="name" />
  </resultMap>
    <resultMap extends="BaseResultMap" id="ProjectStoreWithUnitName" type="cn.edu.upc.manage.model.ProjectStoreWithUnitName">
        <result column="name" jdbcType="VARCHAR" property="constructionUnitName" />
        <result column="title" jdbcType="VARCHAR" property="guideName" />
        <result column="apply_type_name" jdbcType="VARCHAR" property="applyTypeName" />
    </resultMap>

    <resultMap extends="BaseResultMap" id="ProjectStoreUnitName" type="cn.edu.upc.manage.vo.ProjectStoreUnitName">
        <result column="name" jdbcType="VARCHAR" property="unitName" />
    </resultMap>

    <resultMap extends="BaseResultMap" id="ProjectStoreApprove" type="cn.edu.upc.manage.vo.ProjectStoreApprove">
        <result column="approve2" jdbcType="INTEGER" property="approve2" />
        <result column="examine" jdbcType="INTEGER" property="examine" />
    </resultMap>

  <resultMap id="ApproveStatistic" type="cn.edu.upc.manage.mo.ApproveStatistic">
    <result column="projectReport_num" jdbcType="INTEGER" property="projectReportNum" />
    <result column="studyReport_num" jdbcType="INTEGER" property="studyReportNum" />
    <result column="predesignReport_num" jdbcType="INTEGER" property="predesignReportNum" />
    <result column="keepRecord_num" jdbcType="INTEGER" property="keepRecordNum" />
    <result column="tender_num" jdbcType="INTEGER" property="tenderNum" />
    <result column="contract_num" jdbcType="INTEGER" property="contractNum" />
    <result column="startReport_num" jdbcType="INTEGER" property="startReportNum" />
    <result column="affixReport_num" jdbcType="INTEGER" property="affixReportNum" />
  </resultMap>

    <!-- 返回所有项目库中的项目,返回中加上建设单位名称-->
    <select id="selectAllProject" resultMap="ProjectStoreWithUnitName">
--         select project_store.*,construction_unit.name
--         from project_store,construction_unit
--         where project_store.constru_unit_id = construction_unit.id
--         and project_store.del_flag = 0
--         order by id desc
SELECT a.*,guide.title
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0
        order by id desc) as a
				LEFT JOIN guide on guide.id=a.guide_id
    </select>
    <!-- 只根据项目名称模糊查询 -->
    <select id="selectByProjectName" parameterType="java.lang.String" resultMap="ProjectStoreWithUnitName">

				SELECT a.*,guide.title,
				case a.apply_type
				when 1 then '指南申报'
				when 2 then '自主申报'
				end as apply_type_name
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0
        and project_name like concat('%',#{projectName},'%') order by project_name) as a
				LEFT JOIN guide on guide.id=a.guide_id
  </select>
    <!--只根据建设年份查询-->
    <select id="selectByBuildYear" parameterType="java.lang.String" resultMap="ProjectStoreWithUnitName">

				SELECT a.*,guide.title,
				case a.apply_type
				when 1 then '指南申报'
				when 2 then '自主申报'
				end as apply_type_name
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0
        and build_year like concat ('%',#{buildYear,jdbcType = VARCHAR},'%') order by build_year)as a
				LEFT JOIN guide on guide.id=a.guide_id
  </select>

    <!--同时根据两个条件查询-->
    <select id="selectByProjectNameAndBuildYear" parameterType="java.lang.String" resultMap="ProjectStoreWithUnitName">

				SELECT a.*,guide.title,
				case a.apply_type
				when 1 then '指南申报'
				when 2 then '自主申报'
				end as apply_type_name
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0
        and project_name like concat('%',#{projectName,jdbcType = VARCHAR},'%')
        and build_year like concat('%',#{buildYear,jdbcType = VARCHAR},'%')
        order BY id)as a
				LEFT JOIN guide on guide.id=a.guide_id
  </select>

    <!--  增加项目-->
    <insert id="addProject">
    insert into project_store(guide_id, project_name, build_year,
      place, project_type, invest_direction,
      industry_direction, implement_dept, invest_estimate,
      content) values (#{guideId,jdbcType=INTEGER}, #{projectName,jdbcType=VARCHAR}, #{buildYear,jdbcType=VARCHAR},
      #{place,jdbcType=VARCHAR}, #{projectType,jdbcType=INTEGER}, #{investDirection,jdbcType=VARCHAR},
      #{industryDirection,jdbcType=VARCHAR}, #{implementDept,jdbcType=VARCHAR}, #{investEstimate,jdbcType=REAL},
      #{content,jdbcType=VARCHAR})
  </insert>

<!--增加搜索-->
    <select id="selectProjectStore" parameterType="java.lang.String" resultMap="BaseResultMap">
       select * from  project_store where del_flag = 0 and approve=1 and
       build_year=year(CURRENT_DATE)
       and apply_type= 1 and constru_unit_id=#{unitId}
       <if test="projectName != null ">
        and project_name like concat('%',#{projectName,jdbcType = VARCHAR},'%') order by id DESC
    </if>
  </select>

    <select id="searchProjectStore" parameterType="cn.edu.upc.manage.model.ProjectStore" resultMap="BaseResultMap">
        select * from project_store
        where
        apply_type= 1
        and
        approve=1
        and
        del_flag = 0
        -- 模糊查询
        <if test="projectName != null ">
            and project_name like concat('%',#{projectName,jdbcType = VARCHAR},'%') order by project_name
        </if>
    </select>
    <select id="selectProjectPass" resultMap="ProjectStoreWithUnitName">
        select * from project_store where del_flag = 0
        and approve = 1
        order by id desc
    </select>

    <select id="selectProjectPlaned" parameterType="java.lang.Integer" resultType="cn.edu.upc.manage.vo.ProjectStoreVo">
        select * from project_store where del_flag = 0 and constru_unit_id = #{departmentUnitId} and approve = 1
        and id in (select project_id from project_plan where del_flag = 0)
        order by id desc
    </select>

<!-- 根据建设单位id获取通过审核的项目-->
    <select id="selectPassProjectByUnitId" parameterType="java.lang.Integer" resultType="cn.edu.upc.manage.vo.ProjectStoreVo">
        select * from project_store where del_flag = 0
        and approve = 1 and constru_unit_id = #{departmentUnitId}
        order by id desc
    </select>

    <select id="selectPassProjectByUnitId2" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select * from project_store where del_flag = 0
         and constru_unit_id = #{departmentUnitId}
        order by id desc
    </select>

<!--    设置项目计划申报的标志位-->
    <update id="updatePlanedFlag" parameterType="java.lang.Integer">
        update project_store set planed_flag = #{planedFlag}, flag = #{flag} where id = #{id}
    </update>

    <select id="getCanTenderByUnitId" resultMap="ProjectStoreUnitName">
        	select a.*,construction_unit.`name` from
(select * from project_store where del_flag=0 and id in
        	(select project_id from predesign_report where approve=1 and examine=1) and constru_unit_id=#{unitId})as a
					LEFT JOIN construction_unit on a.constru_unit_id = construction_unit.id
    </select>

    <select id="getCanContractByUnitId" resultMap="ProjectStoreUnitName">
        						select a.*,construction_unit.`name` from
					(select * from project_store where del_flag=0 and id in
        	(select project_id from tender_information where approve=1 ) and constru_unit_id=#{unitId})as a
					LEFT JOIN construction_unit on a.constru_unit_id = construction_unit.id
    </select>

    <select id="getCanProgressByUnitId" resultMap="BaseResultMap">
                	select * from project_store where del_flag=0 and id in
        	(select project_id from contract_information where approve=1 ) and constru_unit_id=#{unitId}
    </select>

    <select id="getCanDesignByUnitId" resultMap="ProjectStoreApprove">

	select a.*,
	CASE predesign_report.examine
	WHEN 0  THEN 0
	WHEN 1  THEN 1
	WHEN 2  THEN 2
	ELSE 3
END as examine,
	CASE predesign_report.approve
	WHEN 0  THEN 0
	WHEN 1  THEN 1
	WHEN 2  THEN 2
	ELSE 3
END as approve2
		from   (select
  ps2.*
  from
   project_store ps2,feasibility_research_report frr
  where  constru_unit_id=#{unitId} and ps2.approve=1 and ps2.del_flag=0  and frr.project_id=ps2.id
	and frr.approve=1 and frr.examine=1 and frr.del_flag=0 )as a
	LEFT JOIN predesign_report on a.id=predesign_report.project_id ORDER BY a.id desc
    </select>

    <select id="selectById" resultMap="ProjectStoreUnitName">
    select * from
project_store where id=#{id}
    </select>


    <!-- 返回所有项目库中的项目,返回中加上建设单位名称-->
    <select id="selectAllProject2" resultMap="ProjectStoreWithUnitName">
--         select project_store.*,construction_unit.name
--         from project_store,construction_unit
--         where project_store.constru_unit_id = construction_unit.id
--         and project_store.del_flag = 0
--         order by id desc
 SELECT a.*,guide.title
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0 and constru_unit_id=#{unitId}
        order by id desc) as a
				LEFT JOIN guide on guide.id=a.guide_id
    </select>
    <!-- 只根据项目名称模糊查询 -->
    <select id="selectByProjectName2" parameterType="java.lang.String" resultMap="ProjectStoreWithUnitName">

				SELECT a.*,guide.title,
				case a.apply_type
				when 1 then '指南申报'
				when 2 then '自主申报'
				end as apply_type_name
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0 and constru_unit_id=${unitId}
        and project_name like concat('%',#{projectName},'%') order by project_name) as a
				LEFT JOIN guide on guide.id=a.guide_id
  </select>
    <!--只根据建设年份查询-->
    <select id="selectByBuildYear2" parameterType="java.lang.String" resultMap="ProjectStoreWithUnitName">

				SELECT a.*,guide.title,
				case a.apply_type
				when 1 then '指南申报'
				when 2 then '自主申报'
				end as apply_type_name
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0 and constru_unit_id=${unitId}
        and build_year like concat ('%',#{buildYear,jdbcType = VARCHAR},'%') order by build_year)as a
				LEFT JOIN guide on guide.id=a.guide_id
  </select>

    <!--同时根据两个条件查询-->
    <select id="selectByProjectNameAndBuildYear2" parameterType="java.lang.String" resultMap="ProjectStoreWithUnitName">

				SELECT a.*,guide.title,
				case a.apply_type
				when 1 then '指南申报'
				when 2 then '自主申报'
				end as apply_type_name
				FROM
				(select project_store.*,construction_unit.name
        from project_store,construction_unit
        where project_store.constru_unit_id = construction_unit.id
        and project_store.del_flag = 0 and constru_unit_id=${unitId}
        and project_name like concat('%',#{projectName,jdbcType = VARCHAR},'%')
        and build_year like concat('%',#{buildYear,jdbcType = VARCHAR},'%')
        order BY id)as a
				LEFT JOIN guide on guide.id=a.guide_id
  </select>

    <select id="selectCanDesign" resultMap="ProjectStoreApprove">
    select a.*,
	CASE predesign_report.examine
	WHEN 0  THEN 0
	WHEN 1  THEN 1
	WHEN 2  THEN 2
	ELSE 3
END as examine,
	CASE predesign_report.approve
	WHEN 0  THEN 0
	WHEN 1  THEN 1
	WHEN 2  THEN 2
	ELSE 3
END as approve2
		from   (select
  ps2.*
  from
   project_store ps2,feasibility_research_report frr
  where  constru_unit_id=${unitId} and ps2.approve=1 and ps2.del_flag=0  and frr.project_id=ps2.id and project_name like concat('%','${projectName}','%')
	and frr.approve=1 and frr.examine=1 and frr.del_flag=0 )as a
	LEFT JOIN predesign_report on a.id=predesign_report.project_id
    </select>

  <update id="updateStoreFlag">
    update project_store set store_flag = #{projectStore.storeFlag}
    <if test="projectStore.opinion != null">
      , opinion = #{projectStore.opinion}
    </if>
    <if test="projectStore.importantFlag != null">
      , important_flag = #{projectStore.importantFlag}
    </if>
    where id = #{projectStore.id}
  </update>

  <select id="getAll" resultMap="ProjectStoreMo">
    SELECT a.*,
    CASE
    WHEN b.id is NULL then 0
    ELSE 1
    END
    as plan_id

    <if test="projectStoreFlagVo.storeFlag &gt; 0 and projectStoreFlagVo.storeFlag &lt; 7">
      ,c.contract_money, d.spend_money
    </if>


    FROM (SELECT
    id,project_name,guide_name,construt_unit_name,build_year,place,planed_flag,project_id,create_time,approve,flag
    <if test="projectStoreFlagVo.flag == 1 or projectStoreFlagVo.storeFlag == 97">
      ,store_flag
    </if>
    <if test="projectStoreFlagVo.flag == 3">
      ,suggestion
    </if>
    <if test="projectStoreFlagVo.flag == 4">
      , verification_opinion_one, verification_opinion_two,verification_opinion_three
    </if>
    FROM project_store WHERE del_flag = 0
    <if test="projectStoreFlagVo.projectName != null">
      and project_name like concat ('%',#{projectStoreFlagVo.projectName,jdbcType = VARCHAR},'%')
    </if>
    <if test="projectStoreFlagVo.place != null">
      and place like concat ('%',#{projectStoreFlagVo.place,jdbcType = VARCHAR},'%')
    </if>
    <if test="projectStoreFlagVo.buildYear != null">
      and build_year = #{projectStoreFlagVo.buildYear}
    </if>
    <if test="projectStoreFlagVo.projectType != null">
      and project_type = #{projectStoreFlagVo.projectType}
    </if>
    <if test="projectStoreFlagVo.constructionUnit != null">
      and constru_unit_id = #{projectStoreFlagVo.constructionUnit}
    </if>
    <!--    &amp;amp;lt;if test="projectStoreFlagVo.storeFlag != -1 and projectStoreFlagVo.storeFlag !=98 and projectStoreFlagVo.storeFlag !=97"&amp;amp;gt;-->
    <!--      and store_flag = #{projectStoreFlagVo.storeFlag}-->
    <!--      and id not in(-->
    <!--      SELECT project_id FROM project_year_plan where del_flag = 0-->
    <!--      )-->
    <!--    &amp;amp;lt;/if&amp;amp;gt;-->
    <if test="projectStoreFlagVo.storeFlag == 1 or projectStoreFlagVo.storeFlag == 2 or projectStoreFlagVo.storeFlag == 3 or projectStoreFlagVo.storeFlag == 99 or projectStoreFlagVo.storeFlag == 0">
      and store_flag = #{projectStoreFlagVo.storeFlag}

    </if>

    <if test="projectStoreFlagVo.storeFlag == 4">
      and planed_flag = 21
    </if>

    <if test="projectStoreFlagVo.storeFlag == 5">
      and build_year != #{projectStoreFlagVo.thisYear}
      and planed_flag != 21
      and id in(
      SELECT project_id FROM project_year_plan where del_flag = 0
      )
    </if>

    <if test="projectStoreFlagVo.storeFlag == 6">
      and build_year = #{projectStoreFlagVo.thisYear}
      and planed_flag != 21
      and id in(
      SELECT project_id FROM project_year_plan where del_flag = 0
      )
    </if>

    <if test="projectStoreFlagVo.storeFlag == 98">
      and store_flag &gt; 0 and store_flag &lt; 4
    </if>

    <if test="projectStoreFlagVo.storeFlag == 98 and projectStoreFlagVo.planedFlagA == 1">
      and invest_estimate &gt; 50
    </if>

    <if test="projectStoreFlagVo.planedFlagA != -1">
      <if test="projectStoreFlagVo.planedFlagA == 18">
        and (
        planed_flag &gt; #{projectStoreFlagVo.planedFlagA}
        or planed_flag = #{projectStoreFlagVo.planedFlagB}
        )
      </if>
      <if test="projectStoreFlagVo.planedFlagA != 18">
        and (
        planed_flag = #{projectStoreFlagVo.planedFlagA}
        or planed_flag = #{projectStoreFlagVo.planedFlagB}
        or planed_flag = #{projectStoreFlagVo.planedFlagC}
        or planed_flag &gt; #{projectStoreFlagVo.planedFlagC}
        )
      </if>
    </if>
    <if test="projectStoreFlagVo.storeFlag == 98 and projectStoreFlagVo.planedFlagA == -1">
        and
        planed_flag = #{projectStoreFlagVo.planedFlagB}
    </if>
    <if test="user.departmentUnitId == 1 and user.userType == 1">
      and important_flag = 0
    </if>
    <if test="user.departmentUnitId == 2 and user.userType == 1">
      and project_nature = '企业自筹资金' and important_flag = 1
    </if>
    <if test="user.departmentUnitId == 3 and user.userType == 1">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 31
    </if>
    <if test="user.departmentUnitId == 4 and user.userType == 1">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 2
    </if>
    <if test="user.departmentUnitId == 5 and user.userType == 1">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 3
    </if>
    <if test="user.departmentUnitId == 6 and user.userType == 1">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 4
    </if>
    <if test="user.departmentUnitId == 7 and user.userType == 1">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 5
    </if>
    <if test="user.departmentUnitId == 8 and user.userType == 1">
      and approve &gt; 0
    </if>
    <if test="user.departmentUnitId == 9 and user.userType == 1">
      and approve &gt; 2
    </if>
    <if test="user.departmentUnitId == 10 and user.userType == 1">
      and approve &gt; 4
    </if>
    <if test="projectStoreFlagVo.flag == 1">
      and id in(
      SELECT project_id FROM project_year_plan where del_flag = 0
      and plan_year = #{projectStoreFlagVo.planYear}
      )
    </if>

    <if test="projectStoreFlagVo.flag == 2">
      and id not in(
      SELECT project_id FROM project_year_plan where del_flag = 0
      )
    </if>

    )as a
    LEFT JOIN project_year_plan as b on a.id = b.project_id

    <if test="projectStoreFlagVo.storeFlag &gt; 0 and projectStoreFlagVo.storeFlag &lt; 7">
      LEFT JOIN (SELECT project_id, SUM(contract_money) as contract_money FROM project_section GROUP BY project_id)as c on a.id = c.project_id
      LEFT JOIN (SELECT project_id, SUM(expend_money) as spend_money FROM construction_progress GROUP BY project_id)as d on a.id = d.project_id
    </if>

    order by
    <if test="projectStoreFlagVo.flag == 2">
      build_year,
    </if>
    <if test="projectStoreFlagVo.flag == 3">
      suggestion,
    </if>
    <if test="projectStoreFlagVo.storeFlag == 97">
      store_flag,
    </if>
    flag ,
    approve,create_time desc
  </select>

  <select id="getByUnitId" resultMap="ProjectStoreMo">
    SELECT a.*,
    CASE
    WHEN b.id is NULL then 0
    ELSE 1
    END
    as plan_id
    <if test="projectStoreFlagVo.storeFlag &gt; 0 and projectStoreFlagVo.storeFlag &lt; 7">
      , c.contract_money, d.spend_money
    </if>
    FROM (SELECT
    id,project_name,guide_name,construt_unit_name,build_year,place,planed_flag,project_id,approve,create_time,flag
    <if test="projectStoreFlagVo.flag == 4">
      , verification_opinion_one, verification_opinion_two,verification_opinion_three
    </if>
    FROM project_store WHERE del_flag = 0 and constru_unit_id = #{unitId}
    <if test="projectStoreFlagVo.projectName != null">
      and project_name like concat ('%',#{projectStoreFlagVo.projectName,jdbcType = VARCHAR},'%')
    </if>
    <if test="projectStoreFlagVo.place != null">
      and place like concat ('%',#{projectStoreFlagVo.place,jdbcType = VARCHAR},'%')
    </if>
    <if test="projectStoreFlagVo.buildYear != null">
      and build_year = #{projectStoreFlagVo.buildYear}
    </if>
    <if test="projectStoreFlagVo.projectType != null">
      and project_type = #{projectStoreFlagVo.projectType}
    </if>
    <!--    &amp;amp;lt;if test="projectStoreFlagVo.storeFlag != -1 and projectStoreFlagVo.storeFlag !=98"&amp;amp;gt;-->
    <!--      and store_flag = #{projectStoreFlagVo.storeFlag}-->
    <!--    &amp;amp;lt;/if&amp;amp;gt;-->
    <if test="projectStoreFlagVo.storeFlag == 0 or projectStoreFlagVo.storeFlag == 1 or projectStoreFlagVo.storeFlag == 2 or projectStoreFlagVo.storeFlag == 3 or projectStoreFlagVo.storeFlag == 99">
      and store_flag = #{projectStoreFlagVo.storeFlag}

    </if>

    <if test="projectStoreFlagVo.storeFlag == 4">
      and planed_flag = 21
    </if>

    <if test="projectStoreFlagVo.storeFlag == 5">
      and build_year != #{projectStoreFlagVo.thisYear}
      and planed_flag != 21
      and id in(
      SELECT project_id FROM project_year_plan where del_flag = 0
      )
    </if>

    <if test="projectStoreFlagVo.storeFlag == 6">
      and build_year = #{projectStoreFlagVo.thisYear}
      and planed_flag != 21
      and id in(
      SELECT project_id FROM project_year_plan where del_flag = 0
      )
    </if>

    <if test="projectStoreFlagVo.storeFlag == 98">
      and store_flag &gt; 0 and store_flag &lt; 4
    </if>

    <if test="projectStoreFlagVo.storeFlag == 98 and projectStoreFlagVo.planedFlag == -1 and projectStoreFlagVo.flag != 3 and projectStoreFlagVo.flag != 4">
      and invest_estimate &gt; 50
    </if>

    <if test="projectStoreFlagVo.planedFlag != -1">
      and (planed_flag = #{projectStoreFlagVo.planedFlag}
      or planed_flag = #{projectStoreFlagVo.planedFlagA}
      or planed_flag = #{projectStoreFlagVo.planedFlagB}
      or planed_flag = #{projectStoreFlagVo.planedFlagC}
      or planed_flag &gt; #{projectStoreFlagVo.planedFlagC}
      )
    </if>
    <if test="projectStoreFlagVo.flag == 3">
      and (planed_flag = 17
      or planed_flag &gt; 18
      )
    </if>
    <if test="projectStoreFlagVo.flag == 1">
      and id in(
      SELECT project_id FROM project_year_plan where del_flag = 0
      )
    </if>
    <if test="projectStoreFlagVo.flag == 2">
      and tender_flag = 0
    </if>
    <if test="projectStoreFlagVo.flag == 4">
      and (planed_flag = 5 or planed_flag &gt; 6)
    </if>
    ) as a
    LEFT JOIN project_year_plan as b on a.id = b.project_id
    <if test="projectStoreFlagVo.storeFlag &gt; 0 and projectStoreFlagVo.storeFlag &lt; 7">
      LEFT JOIN (SELECT project_id, SUM(contract_money) as contract_money FROM project_section GROUP BY project_id)as c on a.id = c.project_id
      LEFT JOIN (SELECT project_id, SUM(expend_money) as spend_money FROM construction_progress GROUP BY project_id)as d on a.id = d.project_id
    </if>
    order by flag ,
    create_time desc
  </select>

  <update id="updateTenderFlag">
        update project_store set tender_flag = 0
    where id = #{projectId}
  </update>

  <select id="getByUnitIdConstract" resultMap="BaseResultMap">
    SELECT
    id,project_name,guide_name,construt_unit_name,build_year,place,planed_flag,project_id,flag
     FROM project_store WHERE del_flag = 0 and constru_unit_id = #{unitId}
    and ((tender_flag = 0 and planed_flag = 11)
    or (tender_flag = 1 and planed_flag = 5)
    or planed_flag &gt; 12
    )
    and store_flag &gt; 0 and store_flag &lt; 4
    order by flag ,
    create_time desc
  </select>

  <update id="updateSectionNum">
            update project_store set section_num = #{sectionNum}
    where id = #{projectId}
  </update>

  <update id="updateSectionFinishNum">
                update project_store set section_finish_num = section_finish_num + 1
    where id = #{projectId}
  </update>

  <select id="getByUnitIdFinish" resultMap="BaseResultMap">
    SELECT
     id,project_name,guide_name,construt_unit_name,build_year,place,planed_flag,project_id,flag
     FROM project_store WHERE del_flag = 0 and constru_unit_id = #{unitId}
    and section_finish_num = section_num
    and store_flag &gt; 0 and store_flag &lt; 4
    and planed_flag &gt;= 19
    order by flag ,
    create_time desc
  </select>

  <update id="updateImportant">
            update project_store set important_flag = 0
    where id = #{projectId}
  </update>

  <select id="countByUnitId" resultType="java.lang.Integer">
    select COUNT(id) from project_store where constru_unit_id = #{unitId}
  </select>

  <update id="updateSuggestion">
    update project_store set suggestion = #{projectStore.suggestion}
    where id = #{projectStore.id}
  </update>

  <select id="getNumStatistics" resultMap="NumStatisticsMo">
    SELECT a.*,b.*,c.*,d.*,e.*,f.*,g.*,h.*,i.*,j.* FROM
    (SELECT COUNT(id) as unstart_num FROM project_store WHERE del_flag = 0 and id not in (SELECT project_id FROM project_year_plan WHERE del_flag = 0))as a
    LEFT JOIN (SELECT COUNT(id) building_num FROM project_store WHERE del_flag = 0 and (planed_flag &lt; 20 or planed_flag = 22) and id in (SELECT project_id FROM project_year_plan WHERE del_flag = 0)) as b on 1=1
    LEFT JOIN (SELECT COUNT(id) checking_num FROM project_store WHERE del_flag = 0 and planed_flag = 20 and id in (SELECT project_id FROM project_year_plan WHERE del_flag = 0)) as c on 1=1
    LEFT JOIN (SELECT COUNT(id) finish_num FROM project_store WHERE del_flag = 0 and planed_flag = 21 and id in (SELECT project_id FROM project_year_plan WHERE del_flag = 0))as d on 1=1
    LEFT JOIN (SELECT COUNT(id) total_num FROM project_store WHERE del_flag = 0)as e on 1=1
    LEFT JOIN (SELECT COUNT(id) ag_num FROM project_store WHERE del_flag = 0 and project_type_name = '农业')as f on 1=1
LEFT JOIN (SELECT COUNT(id) ah_num FROM project_store WHERE del_flag = 0 and project_type_name = '畜牧业')as g on 1=1
LEFT JOIN (SELECT COUNT(id) water_num FROM project_store WHERE del_flag = 0 and project_type_name = '水利')as h on 1=1
LEFT JOIN (SELECT COUNT(id) welfare_num FROM project_store WHERE del_flag = 0 and project_type_name = '公益性')as i on 1=1
LEFT JOIN (SELECT COUNT(id) help_num FROM project_store WHERE del_flag = 0 and project_type_name = '扶贫')as j on 1=1
  </select>

  <select id="getProjectLocation" resultMap="BaseResultMap">
    SELECT id,project_id,project_name,project_type,project_type_name,longitude,latitude,construt_unit_name,
     invest_estimate,place
     FROM project_store where del_flag = 0
  </select>

  <select id="getConstructUnitStatistic" resultMap="ConstructUnitStatisticMo">
      select a.*,
 CASE
	WHEN b.`name` is NULL THEN
		'项目部'
	ELSE
		b.`name`
END
as `name`
from
 (SELECT constru_unit_id,COUNT(id) as num FROM project_store WHERE del_flag = 0 GROUP BY constru_unit_id)as a
 LEFT JOIN (select id,`name` from construction_unit where del_flag = 0)as b on a.constru_unit_id = b.id
  </select>

  <select id="getProjectLocationClass" resultMap="BaseResultMap">
    SELECT id,project_id,project_name,project_type,project_type_name,longitude,latitude,construt_unit_name,
     invest_estimate,place
     FROM project_store where del_flag = 0
    <if test="flag == 1">
      and id not in (SELECT project_id FROM project_year_plan WHERE del_flag = 0)
    </if>
    <if test="flag == 2">
      and (planed_flag &lt; 20 or planed_flag = 22) and id in (SELECT project_id FROM project_year_plan WHERE del_flag = 0)
    </if>
    <if test="flag == 3">
      and planed_flag = 20 and id in (SELECT project_id FROM project_year_plan WHERE del_flag = 0)
    </if>
    <if test="flag == 4">
      and planed_flag = 21 and id in (SELECT project_id FROM project_year_plan WHERE del_flag = 0)
    </if>
    <if test="flag == 5">
      and project_type_name = '农业'
    </if>
    <if test="flag == 6">
      and project_type_name = '畜牧业'
    </if>
    <if test="flag == 7">
      and project_type_name = '水利'
    </if>
    <if test="flag == 8">
      and project_type_name = '公益性'
    </if>
    <if test="flag == 9">
      and project_type_name = '扶贫'
    </if>
  </select>

  <update id="updateVerificationApprove">
    update project_store set approve = #{projectStore.approve}
    <if test="projectStore.verificationOpinionOne != null">
      ,verification_opinion_one = #{projectStore.verificationOpinionOne}
    </if>
    <if test="projectStore.verificationOpinionTwo != null">
      ,verification_opinion_two = #{projectStore.verificationOpinionTwo}
    </if>
    <if test="projectStore.verificationOpinionThree != null">
      ,verification_opinion_three = #{projectStore.verificationOpinionThree}
    </if>
    where id = #{projectStore.id}
  </update>

  <select id="getTest" resultMap="BaseResultMap">
    SELECT * from project_store where
    store_flag &gt; 0 and store_flag &lt; 3 and (planed_flag = 5 or planed_flag &gt; 6) and del_flag = 0
  </select>

  <select id="getApproveStatistics" resultMap="ApproveStatistic">
    SELECT a.*, b.*, c.*, d.*, e.*, f.*, g.*, h.* FROM
(SELECT COUNT(id) as projectReport_num FROM project_store where del_flag = 0 and store_flag = 0) as a
LEFT JOIN
(SELECT COUNT(id) as studyReport_num FROM project_store where del_flag = 0 and planed_flag = 1

      <if test="departmentUnitId == 1">
        and important_flag = 0
      </if>
      <if test="departmentUnitId == 2">
        and project_nature = '企业自筹资金' and important_flag = 1
      </if>
      <if test="departmentUnitId == 3">
        and project_nature = '上级财政资金' and important_flag = 1
        and project_type = 31
      </if>
      <if test="departmentUnitId == 4">
        and project_nature = '上级财政资金' and important_flag = 1
        and project_type = 2
      </if>
      <if test="departmentUnitId == 5">
        and project_nature = '上级财政资金' and important_flag = 1
        and project_type = 3
      </if>
      <if test="departmentUnitId == 6">
        and project_nature = '上级财政资金' and important_flag = 1
        and project_type = 4
      </if>
      <if test="departmentUnitId == 7">
        and project_nature = '上级财政资金' and important_flag = 1
        and project_type = 5
      </if>

) as b on 1=1
LEFT JOIN
(SELECT COUNT(id) as predesignReport_num FROM project_store where del_flag = 0 and planed_flag = 4

    <if test="departmentUnitId == 1">
      and important_flag = 0
    </if>
    <if test="departmentUnitId == 2">
      and project_nature = '企业自筹资金' and important_flag = 1
    </if>
    <if test="departmentUnitId == 3">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 31
    </if>
    <if test="departmentUnitId == 4">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 2
    </if>
    <if test="departmentUnitId == 5">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 3
    </if>
    <if test="departmentUnitId == 6">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 4
    </if>
    <if test="departmentUnitId == 7">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 5
    </if>

) as c on 1=1
LEFT JOIN
(SELECT COUNT(id) as keepRecord_num FROM project_store where del_flag = 0 and planed_flag = 7

    <if test="departmentUnitId == 1">
      and important_flag = 0
    </if>
    <if test="departmentUnitId == 2">
      and project_nature = '企业自筹资金' and important_flag = 1
    </if>
    <if test="departmentUnitId == 3">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 31
    </if>
    <if test="departmentUnitId == 4">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 2
    </if>
    <if test="departmentUnitId == 5">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 3
    </if>
    <if test="departmentUnitId == 6">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 4
    </if>
    <if test="departmentUnitId == 7">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 5
    </if>

) as d on 1=1
LEFT JOIN
(SELECT COUNT(id) as tender_num FROM project_store where del_flag = 0 and planed_flag = 10) as e on 1=1
LEFT JOIN
(SELECT COUNT(id) as contract_mum FROM project_store where del_flag = 0 and planed_flag = 13) as f on 1=1
LEFT JOIN
(SELECT COUNT(id) as startReport_num FROM project_store where del_flag = 0 and planed_flag = 16

    <if test="departmentUnitId == 1">
      and important_flag = 0
    </if>
    <if test="departmentUnitId == 2">
      and project_nature = '企业自筹资金' and important_flag = 1
    </if>
    <if test="departmentUnitId == 3">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 31
    </if>
    <if test="departmentUnitId == 4">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 2
    </if>
    <if test="departmentUnitId == 5">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 3
    </if>
    <if test="departmentUnitId == 6">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 4
    </if>
    <if test="departmentUnitId == 7">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 5
    </if>

) as g on 1=1
LEFT JOIN
(SELECT COUNT(id) as affixReport_num FROM project_store where del_flag = 0 and planed_flag = 20

    <if test="departmentUnitId == 1">
      and important_flag = 0
    </if>
    <if test="departmentUnitId == 2">
      and project_nature = '企业自筹资金' and important_flag = 1
    </if>
    <if test="departmentUnitId == 3">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 31
    </if>
    <if test="departmentUnitId == 4">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 2
    </if>
    <if test="departmentUnitId == 5">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 3
    </if>
    <if test="departmentUnitId == 6">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 4
    </if>
    <if test="departmentUnitId == 7">
      and project_nature = '上级财政资金' and important_flag = 1
      and project_type = 5
    </if>

) as h on 1=1

  </select>

  <update id="delete">
    update project_store set del_flag = 1 where id = #{id}
  </update>

</mapper>